using autoconf 

intf_libs = # Interface dependencies.

lib{opencv-core}: {hxx}{opencl_kernels_core \
  arithm.simd_declarations.hpp.in \
  convert.simd_declarations.hpp.in \
  convert_scale.simd_declarations.hpp.in \
  count_non_zero.simd_declarations.hpp.in \
  has_non_zero.simd_declarations.hpp.in \
  mathfuncs_core.simd_declarations.hpp.in \
  matmul.simd_declarations.hpp.in \
  mean.simd_declarations.hpp.in \
  merge.simd_declarations.hpp.in \
  split.simd_declarations.hpp.in \
  stat.simd_declarations.hpp.in \
  sum.simd_declarations.hpp.in} 

hxx{opencl_kernels_core}: in{opencl_kernels_core.hpp.in}
{
}

hxx{arithm.simd_declarations.hpp}: in{arithm.simd_declarations.hpp.in}
{
  SIMD_FILENAME = $path.posix_string([path] $src_root/core/src/arithm.simd.hpp)
  CV_CPU_SIMD_FILENAME = false
  CV_CPU_DISPATCH_MODES_ALL = "AVX2, SSE4_1, BASELINE"
}

hxx{convert.simd_declarations.hpp}: in{convert.simd_declarations.hpp.in}
{
  SIMD_FILENAME = $path.posix_string([path] $src_root/core/src/convert.simd.hpp)
  CV_CPU_SIMD_FILENAME = false
  CV_CPU_DISPATCH_MODES_ALL = "AVX2, BASELINE"
}

hxx{convert_scale.simd_declarations.hpp}: in{convert_scale.simd_declarations.hpp.in}
{
  SIMD_FILENAME = $path.posix_string([path] $src_root/core/src/convert_scale.simd.hpp)
  CV_CPU_SIMD_FILENAME = false
  CV_CPU_DISPATCH_MODES_ALL = "AVX2, BASELINE"
}

hxx{count_non_zero.simd_declarations.hpp}: in{count_non_zero.simd_declarations.hpp.in}
{
  SIMD_FILENAME = $path.posix_string([path] $src_root/core/src/count_non_zero.simd.hpp)
  CV_CPU_SIMD_FILENAME = false
  CV_CPU_DISPATCH_MODES_ALL = "AVX2, BASELINE"
}

hxx{has_non_zero.simd_declarations.hpp}: in{has_non_zero.simd_declarations.hpp.in}
{
  #TODO: Find out where this is generated, can find no reference to it when building with CMake
}

hxx{mathfuncs_core.simd_declarations.hpp}: in{mathfuncs_core.simd_declarations.hpp.in}
{
  SIMD_FILENAME = $path.posix_string([path] $src_root/core/src/mathfuncs_core.simd.hpp)
  CV_CPU_SIMD_FILENAME = false
  CV_CPU_DISPATCH_MODES_ALL = "AVX2, AVX, BASELINE"
}

hxx{matmul.simd_declarations.hpp}: in{matmul.simd_declarations.hpp.in}
{
  SIMD_FILENAME = $path.posix_string([path] $src_root/core/src/matmul.simd.hpp)
  CV_CPU_SIMD_FILENAME = false
  CV_CPU_DISPATCH_MODES_ALL = "AVX2, BASELINE"
}

hxx{mean.simd_declarations.hpp}: in{mean.simd_declarations.hpp.in}
{
  SIMD_FILENAME = $path.posix_string([path] $src_root/core/src/mean.simd.hpp)
  CV_CPU_SIMD_FILENAME = false
  CV_CPU_DISPATCH_MODES_ALL = "AVX2, BASELINE"
}

hxx{merge.simd_declarations.hpp}: in{merge.simd_declarations.hpp.in}
{
  SIMD_FILENAME = $path.posix_string([path] $src_root/core/src/merge.simd.hpp)
  CV_CPU_SIMD_FILENAME = false
  CV_CPU_DISPATCH_MODES_ALL = "AVX2, BASELINE"
}

hxx{split.simd_declarations.hpp}: in{split.simd_declarations.hpp.in}
{
  SIMD_FILENAME = $path.posix_string([path] $src_root/core/src/split.simd.hpp)
  CV_CPU_SIMD_FILENAME = false
  CV_CPU_DISPATCH_MODES_ALL = "AVX2, BASELINE"
}

hxx{stat.simd_declarations.hpp}: in{stat.simd_declarations.hpp.in}
{
  SIMD_FILENAME = $path.posix_string([path] $src_root/core/src/stat.simd.hpp)
  CV_CPU_SIMD_FILENAME = false
  CV_CPU_DISPATCH_MODES_ALL = "AVX2, SSE4_2, BASELINE"
}

hxx{sum.simd_declarations.hpp}: in{sum.simd_declarations.hpp.in}
{
  SIMD_FILENAME = $path.posix_string([path] $src_root/core/src/sum.simd.hpp)
  CV_CPU_SIMD_FILENAME = false
  CV_CPU_DISPATCH_MODES_ALL = "AVX2, BASELINE"
}

out_pfx = [dir_path] $out_root/include/
src_pfx = [dir_path] $src_root/include/

lib{opencv-config}:
{
  cxx.export.poptions = "-I$out_pfx" "-I$src_pfx"
  cxx.export.libs = $intf_libs
}

# Install recreating subdirectories.
#
{hxx ixx txx}{*}:
{
  install         = include/
  install.subdirs = true
}
